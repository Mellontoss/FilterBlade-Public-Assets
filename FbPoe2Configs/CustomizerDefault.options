Info_OptionVersion("1.1.4n");

// todo: defensive searches?

Chapter("chapter") {

    SectionTitle("Basics");

    Section("General Currency", "Chaos", "E") {
        Function CurrencyList($s, $shd = "SHD", $text) { QuickUI($s, $shd, [], $text, ["normalCurrencyPoe2", "O"]); }

        TierListToolBar("Currency");

        CurrencyList([3.0, "Currency Tier 1", "currency;s"], "S");
        CurrencyList([3.0, "Currency Tier 2", "currency;a"], "S");
        CurrencyList([3.0, "Currency Tier 3", "currency;b"], "S");
        CurrencyList([3.0, "Currency Tier 4", "currency;c"], "S");
        CurrencyList([3.0, "Currency Tier 5", "currency;d"], "S");
        CurrencyList([3.0, "Currency Tier 6", "currency;e"], "S");
        CurrencyList([3.0, "Currency Supplies 1", "currency;supply1"], "S");
        CurrencyList([3.0, "Currency Supplies 2", "currency;supply2"], "S");
        CurrencyList([3.0, "Currency Supplies 3", "currency;supply3"], "S");

        Conditional("?CurrencyNewTiers") { Show; Class Currency; SetTextColor 210 178 135; SetBackgroundColor 0 0 0 255; SetBorderColor 213 159 100 200; SetFontSize 42; }
        ElementAdder_Tier("?CurrencyNewTiers", "CurrencyList");

        Conditional("?CurrencyNewTiersHidden") { }
        ElementAdder_Tier("?CurrencyNewTiersHidden", null, true, "normalCurrencyPoe2", "OH");

        QuickUI([0.0, "Remaining Currency", "currency;exhide"], "SH", [], "", [], "Remaining Currency, which are not matched by any of the above rules, probably due to unmet filtering requirements.");
    }

    Section("Other Currency") {

        Section("Campaign") {
            // generated via manualUtil_GenerateOptFileTierListCode(); util function!
            Function CampaignCurrencyFunc($s, $shd = "SHD", $text) { QuickUI($s, $shd, ["AreaLevel"], $text, ["normalCurrencyPoe2", "DO"]); }
            TierListToolBar();

            CampaignCurrencyFunc([0.0, "Campaign Currencies 1", "currency->leveling;rare"], "SH", "Rare");
            CampaignCurrencyFunc([0.0, "Campaign Currencies 2", "currency->leveling;magic"], "SH", "Magic");
            CampaignCurrencyFunc([0.0, "Campaign Currencies 3", "currency->leveling;wisdom"], "SH", "Wisdom");

            // new tiers
            Conditional("?CampaignCurrencyNewTier") { }
            ElementAdder_Tier("?CampaignCurrencyNewTier", "CampaignCurrencyFunc");
        }

        Section("Emotions") {
            // generated via manualUtil_GenerateOptFileTierListCode(); util function!
            Function EmotionsFunc($s, $shd = "SHD", $text) { QuickUI($s, $shd, [], $text, ["B:Distilled ;C:Stackable Currency", "O"]); }
            TierListToolBar();

            EmotionsFunc([0.0, "Emotions Tier 1", "currency->emotions;s"], "SH", "S Tier");
            EmotionsFunc([0.0, "Emotions Tier 2", "currency->emotions;a"], "SH", "A Tier");
            EmotionsFunc([0.0, "Emotions Tier 3", "currency->emotions;b"], "SH", "B Tier");
            EmotionsFunc([0.0, "Emotions Tier 4", "currency->emotions;c"], "SH", "C Tier");
            EmotionsFunc([0.0, "Emotions Tier 5", "currency->emotions;d"], "SH", "D Tier");
            EmotionsFunc([0.0, "Emotions Tier 6", "currency->emotions;e"], "SH", "E Tier");

            // new tiers
            Conditional("?EmotionsNewTier") { }
            ElementAdder_Tier("?EmotionsNewTier", "EmotionsFunc");

            // hide tier
            Conditional("?EmotionsNewTiersHidden") { }
            ElementAdder_Tier("?EmotionsNewTiersHidden", null, true, "B:Distilled ;C:Stackable Currency", "OH");

            QuickUI([0.0, "Remaining Emotions", "currency->emotions;exhide"], "SH", [], "", [], "Remaining Emotions, which are not matched by any of the above rules, probably due to unmet filtering requirements.");
        }

        Section("Catalysts") {
            // generated via manualUtil_GenerateOptFileTierListCode(); util function!
            Function CatalystsFunc($s, $shd = "SHD", $text) { QuickUI($s, $shd, [], $text, ["B: Catalyst;C:Stackable Currency", "O"]); }
            TierListToolBar();

            CatalystsFunc([0.0, "Catalysts Tier 1", "currency->catalysts;s"], "SH", "S Tier");
            CatalystsFunc([0.0, "Catalysts Tier 2", "currency->catalysts;a"], "SH", "A Tier");
            CatalystsFunc([0.0, "Catalysts Tier 3", "currency->catalysts;b"], "SH", "B Tier");
            CatalystsFunc([0.0, "Catalysts Tier 4", "currency->catalysts;c"], "SH", "C Tier");
            CatalystsFunc([0.0, "Catalysts Tier 5", "currency->catalysts;d"], "SH", "D Tier");
            CatalystsFunc([0.0, "Catalysts Tier 6", "currency->catalysts;e"], "SH", "E Tier");

            // new tiers
            Conditional("?CatalystsNewTier") { }
            ElementAdder_Tier("?CatalystsNewTier", "CatalystsFunc");

            // hide tier
            Conditional("?CatalystsNewTiersHidden") { }
            ElementAdder_Tier("?CatalystsNewTiersHidden", null, true, "B: Catalysts;C:Stackable Currency", "OH");

            QuickUI([0.0, "Remaining Catalysts", "currency->catalysts;exhide"], "SH", [], "", [], "Remaining Catalysts, which are not matched by any of the above rules, probably due to unmet filtering requirements.");
        }

        Section("Essences") {
            // generated via manualUtil_GenerateOptFileTierListCode(); util function!
            Function EssencesFunc($s, $shd = "SHD", $text) { QuickUI($s, $shd, [], $text, ["B:Essence of ;C:Stackable Currency", "O"]); }
            TierListToolBar();

            EssencesFunc([0.0, "Essences Tier 1", "currency->essence;s"], "SH", "S Tier");
            EssencesFunc([0.0, "Essences Tier 2", "currency->essence;a"], "SH", "A Tier");
            EssencesFunc([0.0, "Essences Tier 3", "currency->essence;b"], "SH", "B Tier");
            EssencesFunc([0.0, "Essences Tier 4", "currency->essence;c"], "SH", "C Tier");
            EssencesFunc([0.0, "Essences Tier 5", "currency->essence;d"], "SH", "D Tier");
            EssencesFunc([0.0, "Essences Tier 6", "currency->essence;e"], "SH", "E Tier");

            // new tiers
            Conditional("?EssencesNewTier") { }
            ElementAdder_Tier("?EssencesNewTier", "EssencesFunc");

            // hide tier
            Conditional("?EssencesNewTiersHidden") { }
            ElementAdder_Tier("?EssencesNewTiersHidden", null, true, "B:Essence of ;C:Stackable Currency", "OH");

            QuickUI([0.0, "Remaining Essences", "currency->essence;exhide"], "SH", [], "", [], "Remaining Essences, which are not matched by any of the above rules, probably due to unmet filtering requirements.");
        }

        Section("Omen") {
            // generated via manualUtil_GenerateOptFileTierListCode(); util function!
            Function OmenFunc($s, $shd = "SHD", $text) { QuickUI($s, $shd, [], $text, ["C:Omen", "O"]); }
            TierListToolBar();

            OmenFunc([0.0, "Omen Tier 1", "currency->omen;s"], "SH", "S Tier");
            OmenFunc([0.0, "Omen Tier 2", "currency->omen;a"], "SH", "A Tier");
            OmenFunc([0.0, "Omen Tier 3", "currency->omen;b"], "SH", "B Tier");
            OmenFunc([0.0, "Omen Tier 4", "currency->omen;c"], "SH", "C Tier");
            OmenFunc([0.0, "Omen Tier 5", "currency->omen;d"], "SH", "D Tier");
            OmenFunc([0.0, "Omen Tier 6", "currency->omen;e"], "SH", "E Tier");

            // new tiers
            Conditional("?OmenNewTier") { }
            ElementAdder_Tier("?OmenNewTier", "OmenFunc");

            // hide tier
            Conditional("?OmenNewTiersHidden") { }
            ElementAdder_Tier("?OmenNewTiersHidden", null, true, "C:Omen", "OH");

            QuickUI([0.0, "Remaining Omen", "currency->omen;exhide"], "SH", [], "", [], "Remaining Omen, which are not matched by any of the above rules, probably due to unmet filtering requirements.");
        }

        Section("Splinters") {
            QuickUI([0.0, "Splinters Tier 1", "currency->splinter;t1"], "SH", ["StackSize"], "S Tier", ["B: Splinter;C:Stackable Currency", "OS"]);
            QuickUI([0.0, "Splinters Tier 2", "currency->splinter;t2"], "SH", ["StackSize"], "A Tier", ["B: Splinter;C:Stackable Currency", "OS"]);
            QuickUI([0.0, "Splinters Tier 3", "currency->splinter;t3"], "SH", ["StackSize"], "B Tier", ["B: Splinter;C:Stackable Currency", "OS"]);
            QuickUI([0.0, "Splinters Tier 4", "currency->splinter;t4"], "SH", ["StackSize"], "C Tier", ["B: Splinter;C:Stackable Currency", "OS"]);
            QuickUI([0.0, "Splinters Tier 5", "currency->splinter;t5"], "SH", ["StackSize"], "D Tier", ["B: Splinter;C:Stackable Currency", "OS"]);
        }

        Section("Misc") {
            QuickUI([0.0, "Misc Currency", "currency->others;misc"], "SH", []);
        }
    }

    Section("Gold") {
        QuickUI([0.0, "Gold Tier 1", "gold;stack3"], "SH", ["StackSize", "AreaLevel"]);
        QuickUI([0.0, "Gold Tier 2", "gold;stack2"], "SH", ["StackSize", "AreaLevel"]);
        QuickUI([0.0, "Gold Tier 3", "gold;stack1"], "SH", ["StackSize", "AreaLevel"]);
        QuickUI([0.0, "Gold Tier 4", "gold;stack1lvl"], "SH", ["StackSize", "AreaLevel"]);
        QuickUI([0.0, "Gold Tier 5", "gold;any"], "SH", ["StackSize", "AreaLevel"]);
    }

    Section("Uniques") {
        // generated via manualUtil_GenerateOptFileTierListCode(); util function!
        Function UniquesFunc($s, $shd = "SHD", $text) { QuickUI($s, $shd, [], $text, ["GearPlusFlasks", "O"]); }
        TierListToolBar();

        UniquesFunc([0.0, "Uniques Tier 1", "uniques;t1"], "SH", "Tier 1");
        UniquesFunc([0.0, "Uniques Tier 2", "uniques;t2"], "SH", "Tier 2");
        UniquesFunc([0.0, "Uniques MultiSpecial High", "uniques;multispecialhigh"], "SH", "Multi Special High");
        UniquesFunc([0.0, "Uniques MultiSpecial", "uniques;multispecial"], "SH", "Multi Special");
        UniquesFunc([0.0, "Uniques EarlyLeague", "uniques;earlyleague"], "SH", "Early League");
        UniquesFunc([0.0, "Uniques Tier 3 Boss", "uniques;t3boss"], "SH", "Tier 3 Boss");
        UniquesFunc([0.0, "Uniques Tier 3", "uniques;t3"], "SH", "Tier 3");
        UniquesFunc([0.0, "Uniques Hideable", "uniques;hideable"], "SH", "Hideable");

        // new tiers
        Conditional("?UniquesNewTier") { }
        ElementAdder_Tier("?UniquesNewTier", "UniquesFunc");

        // hide tier
        Conditional("?UniquesNewTiersHidden") { }
    }

    Section("Chancing") {
        // generated via manualUtil_GenerateOptFileTierListCode(); util function!
        Function ChancingFunc($s, $shd = "SHD", $text) { QuickUI($s, $shd, [], $text, ["gearPlusFlasks", "OS"]); }
        TierListToolBar();

        ChancingFunc([0.0, "Chancing bases", "chancing;any"], "SH", []); // todo

        // new tiers
        Conditional("?ChancingNewTier") { }
        ElementAdder_Tier("?ChancingNewTier", "ChancingFunc");

        // hide tier
        Conditional("?ChancingNewTiersHidden") { }
        ElementAdder_Tier("?ChancingNewTiersHidden", null, true, "gearPlusFlasks", "OH");
    }

    Section("Gems") {
        QuickUI([0.0, "Gems, Spirit, Level 20 ", "gems->uncut;spirit20"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Gems, Skill, Level 20 ", "gems->uncut;skill20"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Gems, Spirit, Level 19 ", "gems->uncut;spirit19"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Gems, Skill, Level 19 ", "gems->uncut;skill19"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Gems, Spirit, Campaign ", "gems->uncut;spiritcampaign"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Gems, Skill, Campaign ", "gems->uncut;skillcampaign"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Gems, Support, Campaign ", "gems->uncut;supportcampaign"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Gems, Spirit, Endgame ", "gems->uncut;otherspiriteg"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Gems, Skill, Endgame ", "gems->uncut;otherskilleg"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Gems, Support, Endgame ", "gems->uncut;othersupporteg"], "SH", ["AreaLevel", "ItemLevel"]);
        QuickUI([0.0, "Cut Gems ", "gems;any"], "SH", ["AreaLevel", "ItemLevel"]);
    }

    Section("Sockets") {

        Section("Runes") {
            // generated via manualUtil_GenerateOptFileTierListCode(); util function!
            Function RunesFunc($s, $shd = "SHD", $text) { QuickUI($s, $shd, [], $text, ["C:Socketable;B: Rune", "O"]); }
            TierListToolBar();

            RunesFunc([0.0, "Runes Tier 1", "sockets->runes;t1"], "SH", "Tier 1");
            RunesFunc([0.0, "Runes Tier 2", "sockets->runes;t2"], "SH", "Tier 2");
            RunesFunc([0.0, "Runes Tier 3", "sockets->runes;t3"], "SH", "Tier 3");
            RunesFunc([0.0, "Runes Tier 4", "sockets->runes;t4"], "SH", "Tier 4");

            // new tiers
            Conditional("?RunesNewTier") { }
            ElementAdder_Tier("?RunesNewTier", "RunesFunc");

            // hide tier
            Conditional("?RunesNewTiersHidden") { }
            ElementAdder_Tier("?RunesNewTiersHidden", null, true, "C:Socketable;B: Rune", "OH");
        }

        Section("Soul Cores") {
            // generated via manualUtil_GenerateOptFileTierListCode(); util function!
            Function SoulCoresFunc($s, $shd = "SHD", $text) { QuickUI($s, $shd, [], $text, ["C:Socketable;B:Soul Core of ", "O"]); }
            TierListToolBar();

            SoulCoresFunc([0.0, "Soul Cores Tier 1", "sockets->cores;s"], "SH", "S Tier");
            SoulCoresFunc([0.0, "Soul Cores Tier 2", "sockets->cores;a"], "SH", "A Tier");
            SoulCoresFunc([0.0, "Soul Cores Tier 3", "sockets->cores;b"], "SH", "B Tier");
            SoulCoresFunc([0.0, "Soul Cores Tier 4", "sockets->cores;c"], "SH", "C Tier");
            SoulCoresFunc([0.0, "Soul Cores Tier 5", "sockets->cores;d"], "SH", "D Tier");
            SoulCoresFunc([0.0, "Soul Cores Tier 6", "sockets->cores;e"], "SH", "E Tier");

            // new tiers
            Conditional("?SoulCoresNewTier") { }
            ElementAdder_Tier("?SoulCoresNewTier", "SoulCoresFunc");

            // hide tier
            Conditional("?SoulCoresNewTiersHidden") { }
            ElementAdder_Tier("?SoulCoresNewTiersHidden", null, true, "C:Socketable;B:Soul Core of ", "OH");
        }
    }
}

Chapter() {
    SectionTitle("Endgame");

    Section("Rares & Crafting") {
        QuickUI([0.0, "endgame rares todo", "rr->amuring;t1"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr->amuring;t2"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr->amuring;t3"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr->belts;t1"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr->belts;t2"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr->belts;t3"], "SH", []); // todo

        QuickUI([0.0, "endgame rares todo", "rr;t1_top"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t1_other"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t2_top"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t2_a1"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t2_other"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t3_top"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t3_a1"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t3_a2"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t3_other"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t4_a1"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t4_a2"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t4_other"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t5_a1"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t5_a2"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "rr;t5_other"], "SH", []); // todo

        QuickUI([0.0, "endgame rares todo", "decorators->rareeg;largerares"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "decorators->rareeg;mediumrares1"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "decorators->rareeg;mediumrares2"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "decorators->rareeg;tinyrares"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "decorators->rareeg;ilvl82"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "decorators->rareeg;corruptedrares"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "decorators->rareeg;corruptedraresimplicit"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "decorators->rareeg;basicraredecorator"], "SH", []); // todo
        QuickUI([0.0, "endgame rares todo", "decorators->rareeg;ilvl81caster"], "SH", []); // todo

        Title("Crafting");

        QuickUI([0.0, "endgame crafting todo", "endgame->normalcraft->decorator;normal82"], "SH", []); // todo
        QuickUI([0.0, "endgame crafting todo", "endgame->normalcraft->decorator;normaldecoratorjwlry"], "SH", []); // todo
        QuickUI([0.0, "endgame crafting todo", "endgame->normalcraft->decorator;normaldecorator"], "SH", []); // todo
        QuickUI([0.0, "endgame crafting todo", "endgame->normalcraft->any;t1ideallevel"], "SH", []); // todo
        QuickUI([0.0, "endgame crafting todo", "endgame->normalcraft->any;minionsceptresoptional"], "SH", []); // todo
        QuickUI([0.0, "endgame crafting todo", "endgame->normalcraft->any;t1"], "SH", []); // todo
        QuickUI([0.0, "endgame crafting todo", "endgame->normalcraft->any;t2"], "SH", []); // todo
        QuickUI([0.0, "endgame crafting todo", "endgame->normalcraft->any;t3"], "SH", []); // todo
    }

    Section("Flasks & Charms") {
        QuickUI([0.0, "endgame flasks charms todo", "endgame->flasks;any20qualflask"], "SH", []); // todo
        QuickUI([0.0, "endgame flasks charms todo", "endgame->flasks;anyqualflask"], "SH", []); // todo
        QuickUI([0.0, "endgame flasks charms todo", "endgame->flasks;earlymappinglifemana"], "SH", []); // todo
        QuickUI([0.0, "endgame flasks charms todo", "endgame->charms;optimallevelqualitycharms"], "SH", []); // todo
        QuickUI([0.0, "endgame flasks charms todo", "endgame->charms;earlymappingcharms"], "SH", []); // todo
        QuickUI([0.0, "endgame flasks charms todo", "endgame->charms;anycharm"], "SH", []); // todo
    }

    Section("Jewellery") {
        QuickUI([0.0, "endgame jewellery todo", "endgame->jewellery;selectamulets"], "SH", []); // todo
        QuickUI([0.0, "endgame jewellery todo", "endgame->jewellery;amulets"], "SH", []); // todo
        QuickUI([0.0, "endgame jewellery todo", "endgame->jewellery;selectrings"], "SH", []); // todo
        QuickUI([0.0, "endgame jewellery todo", "endgame->jewellery;rings"], "SH", []); // todo
        QuickUI([0.0, "endgame jewellery todo", "endgame->jewellery;selectbelts"], "SH", []); // todo
        QuickUI([0.0, "endgame jewellery todo", "endgame->jewellery;belts"], "SH", []); // todo
    }

    Section("Waystones") {
        QuickUI([0.0, "waystones todo", "waystone->hiders;corruptedmaphider"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystone->hiders;mirroredmaphider"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;decomap1"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;decomap2"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;decomap3overleveled"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;decomap4overleveled"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;decomap3"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;decomap4"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t16"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t15"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t14"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t13"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t12"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t11"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t10"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t9"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t8"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t7"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t6"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t5"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t4"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t3"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t2"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_wsup_t1"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;decor_implicit"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;deco_corruptedmod"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t16"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t15"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t14"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t13"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t12"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t11"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t10"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t9"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t8"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t7"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t6"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t5"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t4"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t3"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t2"], "SH", []); // todo
        QuickUI([0.0, "waystones todo", "waystones;waystone_t1"], "SH", []); // todo
    }

    Section("Wannabe-Maps") {
        QuickUI([0.0, "wannabe maps todo", "fragments->generic;s"], "SH", []); // todo
        QuickUI([0.0, "wannabe maps todo", "fragments->generic;a"], "SH", []); // todo
        QuickUI([0.0, "wannabe maps todo", "fragments->generic;b"], "SH", []); // todo
        QuickUI([0.0, "wannabe maps todo", "fragments->generic;c"], "SH", []); // todo
        QuickUI([0.0, "wannabe maps todo", "fragments->generic;d"], "SH", []); // todo
        QuickUI([0.0, "wannabe maps todo", "fragments->generic;e"], "SH", []); // todo
        QuickUI([0.0, "Remaining Fragments", "fragments->generic;exhide"], "SH", [], "", [], "Remaining Fragments, which are not matched by any of the above rules, probably due to unmet filtering requirements.");

        Title("Misc.");
        QuickUI([0.0, "wannabe maps todo", "miscmapitemsextra;trialkeysanctum"], "SH", []); // todo
        QuickUI([0.0, "wannabe maps todo", "miscmapitemsextra;trialkeyultimatumreward"], "SH", []); // todo
        QuickUI([0.0, "wannabe maps todo", "miscmapitemsextra;trialkeyultimatum"], "SH", []); // todo
        QuickUI([0.0, "wannabe maps todo", "miscmapitemsextra;relickeys"], "SH", []); // todo
        QuickUI([0.0, "wannabe maps todo", "miscmapitemsextra;relickeyssafe"], "SH", []); // todo

        QuickUI([0.0, "other currency todo", "maplike->special;superkeys"], "SH", []); // todo
        QuickUI([0.0, "other currency todo", "maplike->special;logbooks"], "SH", []); // todo
    }

    Section("Endgame Salvagable Items") {
        QuickUI([0.0, "endgame vendor todo", "endgame->salvagable;qualitymartialany"], "SH", []); // todo
        QuickUI([0.0, "endgame vendor todo", "endgame->salvagable;qualitycasterany"], "SH", []); // todo
        QuickUI([0.0, "endgame vendor todo", "endgame->salvagable;qualityarmorany"], "SH", []); // todo
        QuickUI([0.0, "endgame vendor todo", "endgame->salvagable;socketslarge"], "SH", []); // todo
        QuickUI([0.0, "endgame vendor todo", "endgame->salvagable;socketssmall"], "SH", []); // todo
    }
}

Chapter() {
    SectionTitle("Campaign");

    Section("Campaign Flasks & Charms") {
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->quality;max"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->quality;high"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->quality;any"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->life;t1"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->life;t2"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->life;t3"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->life;t4"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->life;t5"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->life;t6"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->life;t7"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->life;t8"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->mana;t1"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->mana;t2"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->mana;t3"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->mana;t4"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->mana;t5"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->mana;t6"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->mana;t7"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->flasks->mana;t8"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->charms;selected"], "SH", []); // todo
        QuickUI([0.0, "campaign flask charm todo", "leveling->charms;any"], "SH", []); // todo
    }

    Section("Campaign Gear") {
        QuickUI([0.0, "campaign gear todo", "leveling->decorators->rare;largerares"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->decorators->rare;mediumrares1"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->decorators->rare;mediumrares2"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->decorators->rare;tinyrares"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->universal;jewellery"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->armours;ar"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->armours;ev"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->armours;es"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->armours;arev"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->armours;ares"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->armours;eves"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->armours;anythingearly"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->weapons;wands"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->weapons;sceptres"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->weapons;staves"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->weapons;bowsquivers"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->weapons;crossbows"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->weapons;onehandmaces"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->weapons;twohandmaces"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->weapons;quarterstaves"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->rare->remaining;any"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "decorators->leveling->magic;medium1"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "decorators->leveling->magic;medium2"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "decorators->leveling->magic;noticeearly"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "decorators->leveling->magic;tiny"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagicremarkable;jewellery"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->armours;ar"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->armours;ev"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->armours;es"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->armours;arev"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->armours;ares"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->armours;eves"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->weapons;wands"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->weapons;sceptres"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->weapons;staves"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->weapons;bowsquivers"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->weapons;crossbows"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->weapons;onehandmaces"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->weapons;twohandmaces"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->normalmagic->weapons;quarterstaves"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->firstlevels;firstareas"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->firstlevels;earlyboots"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->magic->remaining;largemagicblocker"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->magic->remaining;mediummagicblocker"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->magic->remaining;rest"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->magic->remaining;act2"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "leveling->magic->remaining;act1"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "jewels->generic;anytimeless"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "jewels->generic;anyrare"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "jewels->generic;anymagic"], "SH", []); // todo
        QuickUI([0.0, "campaign gear todo", "relics->generic;any"], "SH", []); // todo
    }

    Section("Campaign Salvagable Items") {
        QuickUI([0.0, "campaign vendor todo", "leveling->salvagable;qualitymartialany"], "SH", []); // todo
        QuickUI([0.0, "campaign vendor todo", "leveling->salvagable;qualitycasterany"], "SH", []); // todo
        QuickUI([0.0, "campaign vendor todo", "leveling->salvagable;qualityarmorany"], "SH", []); // todo
        QuickUI([0.0, "campaign vendor todo", "leveling->salvagable;sockets"], "SH", []); // todo

        QuickUI([0.0, "campaign vendor todo", "leveling->salvagable;qualitymartial"], "SH", []); // todo
        QuickUI([0.0, "campaign vendor todo", "leveling->salvagable;qualitycaster"], "SH", []); // todo
        QuickUI([0.0, "campaign vendor todo", "leveling->salvagable;qualityarmor"], "SH", []); // todo
        QuickUI([0.0, "campaign vendor todo", "leveling->salvagable;socketslarge"], "SH", []); // todo
        QuickUI([0.0, "campaign vendor todo", "leveling->salvagable;socketssmall"], "SH", []); // todo
    }

}

Chapter() {
    SectionTitle("Misc.");

    Section("Special Rules") {
        QuickUI([0.0, "special special todo", "questlikeexception;questlike"], "SH", []); // todo
        QuickUI([0.0, "special special todo", "questlikeexception;questitems"], "SH", []); // todo
        QuickUI([0.0, "special special todo", "artifact;fishingrod"], "SH", []); // todo

        QuickUI([0.0, "Unique Exception: Double Corrupted", "uniques;2xcorrupteduniques"], "SH");
        QuickUI([0.0, "Unique Exception: Sekhema Ring", "uniques;sekhemaring"], "SH");
        QuickUI([0.0, "Corrupted Uniques", "uniques;corrupteduniques"], "SH");

        Title("Error Rules");
        QuickUI([0.0, "Error Currency", "currency;restex"], "SH", []);
        QuickUI([0.0, "Error Misc", "anyremaining;restex"], "SH", []);
        QuickUI([0.0, "Error Emotions", "currency->emotions;restex"], "SH", []);
        QuickUI([0.0, "Error Essences", "currency->essence;restex"], "SH", []);
        QuickUI([0.0, "Error Omen", "currency->omen;restex"], "SH", []);
        QuickUI([0.0, "Error Catalysts", "currency->catalysts;restex"], "SH", []);
        QuickUI([0.0, "Error Fragments", "fragments->generic;restex"], "SH", []);
        QuickUI([0.0, "Error Waystones", "waystones;restex"], "SH", []);
        QuickUI([0.0, "Error Uniques", "uniques;restex"], "SH", []);
    }

    Section("Exotic Bases") {
        QuickUI([0.0, "exotic todo", "exoticbases;superexoticbases"], "SH", []); // todo
        QuickUI([0.0, "exotic todo", "exoticbases;commonexoticbaseshigh"], "SH", []); // todo
        QuickUI([0.0, "exotic todo", "exoticbases;commonexoticbases"], "SH", []); // todo
        QuickUI([0.0, "exotic todo", "exotic->others;doublecorruptedany"], "SH", []); // todo
        QuickUI([0.0, "exotic todo", "exotic->others;overqualityany"], "SH", []); // todo
    }
}
